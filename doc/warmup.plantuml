@startuml
participant "main" as main
participant "config" as conf
participant "health" as he
participant "healthValidator" as val
participant "masterStatus" as state
participant "featureStatus" as feat
participant "transformService" as ts
participant "readFromQueue" as rq
participant "outputToApi" as oa

main -> conf: "get properties"
conf --> main: properties
main -> state: MasterStatus=WARMUP
main -> rq: create from properties
main -> oa: create from properties
main -> val: startWarmUp
activate val #DarkSalmon
val -> rq: "get messages from predefined\nsubset"
val -> val: validate messages
val -> oa: validate output message
val -> val: warmupPassed(true)
val -> feat: doEnable("outputToApi")
val -> feat: doEnable("readFromQueue")
val -> feat: doEnable("importAndTransform")

val -> state: MasterStatus=ACTIVE
val -> val: health=OK
deactivate val
== Active ==
ts -> ts: import, transform, send
activate ts
ts -> feat: isEnabled("readFromQueue")
feat -> ts: true
ts -> rq: read messages
ts -> ts: transform messages
ts -> feat: isEnabled("outputToApi")
feat -> ts: true
ts -> oa: transformed messages
deactivate ts
@enduml